//
//  DZGoodsDetailVC.m
//  LNMobileProject
//
//  Created by LNMac007 on 2017/8/2.
//  Copyright © 2017年 Liuniu. All rights reserved.
//

#import "DZGoodsDetailVC.h"
#import "SDCycleScrollView.h"
#import "DZGoodsDetailTitleView.h"
#import "DZGoodsDetailPriceView.h"
#import "DZGoodsDetailRemarkView.h"
#import "DZGoodsDetailShopView.h"
#import "DZGoodsDetailPullView.h"
#import "DZGoodsDetailBottomView.h"
#import "DZGoodsDetailNavView.h"

#import "DZAddCartVC.h"
#import "DZShopDetailVC.h"
#import "DZShopCommentVC.h"
#import "DZGoodsDetailModel.h"
#import "DZGoodsDetailImageCell.h"
#import "FTPopOverMenu.h"
#import "DZMessageVC.h"
#import "DZGoodsDetailTimeLimitView.h"
#import "DZShopCateVC.h"
#import "DZEMChatUserModel.h"
#import "ChatViewController.h"
#import "DZLoginVC.h"
#import "LNNavigationController.h"

#import <ShareSDK/ShareSDK.h>
#import <ShareSDKUI/ShareSDK+SSUI.h>
#import<ShareSDKUI/SSUIShareActionSheetStyle.h>

#define kGoodsDetailImageCell @"DZGoodsDetailImageCell"

@interface DZGoodsDetailVC ()<SDCycleScrollViewDelegate,UIScrollViewDelegate,UITableViewDelegate,UITableViewDataSource>
@property (nonatomic, strong) UIScrollView *scrollView;
@property (strong, nonatomic) SDCycleScrollView *bannerView;
@property (strong, nonatomic) DZGoodsDetailTitleView *titleView;
@property (strong, nonatomic) DZGoodsDetailPriceView *priceView;
@property (strong, nonatomic) DZGoodsDetailRemarkView *remarkView;
@property (strong, nonatomic) DZGoodsDetailShopView *shopView;
@property (strong, nonatomic) DZGoodsDetailPullView *pullView;
@property (strong, nonatomic) DZGoodsDetailBottomView *bottomView;
@property (strong, nonatomic) DZGoodsDetailNavView *navView;
@property (strong, nonatomic) DZGoodsDetailTimeLimitView *timeLimitView;

@property (nonatomic, strong) UITableView *tableView;
@property (nonatomic, strong) NSMutableArray *imageArray;
@property (nonatomic, strong) NSMutableArray *heightArray;

@property (nonatomic, strong) UIButton *backButton;
@property (nonatomic, strong) UIButton *cartButton;
@property (nonatomic, strong) UIButton *moreButton;

@property (nonatomic, strong) DZGoodsDetailModel *model;
@property (nonatomic, assign) CGFloat oldHeight;
@property (nonatomic, assign) BOOL isScrolling;
@property (nonatomic, assign) BOOL isUp; //是否在上面，还未完全展示图文详情
@property (nonatomic, assign) BOOL isDraging;

@property (nonatomic, assign) NSTimeInterval timeLeft;
@end

@implementation DZGoodsDetailVC

#pragma mark - ---- 生命周期 ----
- (void)viewDidLoad {
    [super viewDidLoad];
    
    self.automaticallyAdjustsScrollViewInsets = NO;

    [self.view addSubview:self.scrollView];
    [self.view addSubview:self.bottomView];
    [self.view addSubview:self.navView];
    
    [self.view addSubview:self.backButton];
    [self.view addSubview:self.cartButton];
    [self.view addSubview:self.moreButton];
    
    [self.scrollView addSubview:self.bannerView];
    [self.scrollView addSubview:self.timeLimitView];
    [self.scrollView addSubview:self.titleView];
    [self.scrollView addSubview:self.priceView];
    [self.scrollView addSubview:self.remarkView];
    [self.scrollView addSubview:self.shopView];
    [self.scrollView addSubview:self.pullView];
    
    [self.scrollView addSubview:self.tableView];
    self.isUp = YES;
    
    @weakify(self);
    [RACObserve(self.tableView, contentSize) subscribeNext:^(NSValue *size) {
        @strongify(self);
        CGFloat height = size.CGSizeValue.height;
        if (height != self.oldHeight) {
            [self.tableView mas_updateConstraints:^(MASConstraintMaker *make) {
                make.height.mas_equalTo(height);
            }];
            self.oldHeight = height;
        }
    }];
    
    
    [self loadData];
    
    // 写在 ViewDidLoad 的最后一行
    [self setSubViewsLayout];
}

- (void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
    
    [self setSubViewsFrame];
}

- (void)viewDidDisappear:(BOOL)animated{
    [super viewDidDisappear:animated];

}

#pragma mark - ---- 代理相关 ----
#pragma mark UIScrollView delegate
- (void)scrollViewDidScroll:(UIScrollView *)scrollView {
    CGFloat offsetY = scrollView.contentOffset.y;
    if (offsetY>0) {
        CGFloat alpha = offsetY/(SCREEN_WIDTH * 785 / 750);
        self.navView.alpha = alpha;
        [self.backButton setImage:[UIImage imageNamed:@"gooddetail_icon_back_b"] forState:UIControlStateNormal];
        [self.moreButton setImage:[UIImage imageNamed:@"gooddetail_icon_other_b"] forState:UIControlStateNormal];
        [self.cartButton setImage:[UIImage imageNamed:@"gooddetail_icon_cart_b"] forState:UIControlStateNormal];
    } else {
        self.navView.alpha = 0;
        [self.backButton setImage:[UIImage imageNamed:@"gooddetail_icon_back"] forState:UIControlStateNormal];
        [self.moreButton setImage:[UIImage imageNamed:@"gooddetail_icon_other"] forState:UIControlStateNormal];
        [self.cartButton setImage:[UIImage imageNamed:@"gooddetail_icon_cart"] forState:UIControlStateNormal];
    }
    
    CGFloat top = [self pullTop] + 46;
    CGFloat pull = offsetY + SCREEN_HEIGHT - 50 - top;
    CGFloat posTop = -(SCREEN_HEIGHT - 50 - top);
    CGFloat posDown = top + 64;
    CGFloat pull2 = top - offsetY;
    
    if (self.scrollView.isDragging) {
        return;
    }
//    if(self.isUp) {
//        if (pull > 0) {
//            [self.scrollView setContentOffset:CGPointMake(0, posTop) animated:NO];
//        }
//    } else {
//        if (pull2 > 0) {
//            [self.scrollView setContentOffset:CGPointMake(0, posDown) animated:NO];
//        }
//    }

}

- (void)scrollViewWillEndDragging:(UIScrollView *)scrollView withVelocity:(CGPoint)velocity targetContentOffset:(inout CGPoint *)targetContentOffset {
        CGFloat offsetY = scrollView.contentOffset.y;
    if (self.model && !self.isScrolling) {
        //self.isScrolling = YES;
        //计算被上拉的高度
        CGFloat top = [self pullTop] + 46;
        CGFloat pull = offsetY + SCREEN_HEIGHT - 50 - top;
        CGFloat posTop = -(SCREEN_HEIGHT - 50 - top);
        CGFloat posDown = top - 64;
        
        CGFloat pull2 = posDown - offsetY;
        if (pull > 0) {
            if (self.isUp) {
                if (pull + velocity.y * 1000 < 150) {
                    //需要归位，即回到pull=0的地方
                    //[self.scrollView setContentOffset:CGPointMake(0, posTop) animated:YES];
                    targetContentOffset->y = posTop;
                } else {
                    //pull需要上移到顶部
                    //[self.scrollView setContentOffset:CGPointMake(0, posDown) animated:YES];
                    targetContentOffset->y = posDown;
                    self.isUp = NO;
                }
            } else {
                if (pull2 > 0) {
                    if (pull2 - velocity.y * 1000  < 150) {
                        //[self.scrollView setContentOffset:CGPointMake(0, posDown) animated:YES];
                        targetContentOffset->y = posDown;
                    } else {
                        //[self.scrollView setContentOffset:CGPointMake(0, posTop) animated:YES];
                        targetContentOffset->y = posTop;
                        self.isUp = YES;
                    }
                }
            }
            
        }
        
    }
}

- (void)scrollViewDidEndScrollingAnimation:(UIScrollView *)scrollView {
    //self.isScrolling = NO;
}

- (void)scrollViewWillBeginDragging:(UIScrollView *)scrollView {
    self.isDraging = YES;
}

- (void)scrollViewWillEndDragging:(UIScrollView *)scrollView willDecelerate:(BOOL)decelerate{
    self.isDraging = NO;
}
#pragma mark UITableView delegate 
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    return self.imageArray.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    DZGoodsDetailImageCell *cell = [tableView dequeueReusableCellWithIdentifier:kGoodsDetailImageCell];
    DZGoodsGalleryItemModel *item = self.imageArray[indexPath.row];
    NSString *imageUrl = item.image_path;
    @weakify(self);
    [cell.picImageView sd_setImageWithURL:[NSURL URLWithString:FULL_URL(imageUrl)] placeholderImage:[UIImage imageNamed:@"placeholder"] completed:^(UIImage *image, NSError *error, SDImageCacheType cacheType, NSURL *imageURL) {
        @strongify(self);
        if(image && !item.isLoaded) {
            //计算出应该的高度
            CGFloat height = SCREEN_WIDTH * image.size.height / image.size.width;
            [self.heightArray setObject:@(height) atIndexedSubscript:indexPath.row];
            
//            [self.tableView reloadRowsAtIndexPaths:[NSArray arrayWithObjects:[NSIndexPath indexPathForRow:indexPath.row inSection:indexPath.section], nil] withRowAnimation:UITableViewRowAnimationNone];
            [self.tableView reloadData];
            item.isLoaded = YES;
        }
    }];
    
    return cell;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
    NSNumber *height = self.heightArray[indexPath.row];
    return height.floatValue;
}

#pragma mark - ---- Action Events 和 response手势 ----
- (void)favoriteViewClick{
<<<<<<< Updated upstream
    if (![DPMobileApplication sharedInstance].isLogined) {
        DZLoginVC *vc = [DZLoginVC new];
        LNNavigationController *nvc = [[LNNavigationController alloc] initWithRootViewController:vc];
        [self.navigationController presentViewController:nvc animated:YES completion:nil];
        return;
    }
    
    NSDictionary *params = @{@"token":[DPMobileApplication sharedInstance].loginUser.token, @"goods_id":self.model.goods_info.goods_id};
=======
    if (![self checkLogin]) {
        return;
    }
    
    NSDictionary *params = @{@"goods_id":self.model.goods_info.goods_id};
>>>>>>> Stashed changes
    LNetWorkAPI *api = [[LNetWorkAPI alloc] initWithUrl:@"/Api/UserCenterApi/collectGoods" parameters:params];
    [SVProgressHUD show];
    [api startWithBlockSuccess:^(__kindof LCBaseRequest *request) {
        [SVProgressHUD dismiss];
        LNNetBaseModel *model = [LNNetBaseModel objectWithKeyValues:request.responseJSONObject];
        if (model.isSuccess) {
            if ([model.info isEqualToString:@"收藏成功!"]) {
                self.titleView.heartImageView.image = [UIImage imageNamed:@"gooddetail_icon_liked"];
                self.titleView.collectNum.text = [NSString stringWithFormat:@"%ld", [self.titleView.collectNum.text integerValue] + 1];
            }else{
                self.titleView.heartImageView.image = [UIImage imageNamed:@"gooddetail_icon_unlike"];
                self.titleView.collectNum.text = [NSString stringWithFormat:@"%ld", [self.titleView.collectNum.text integerValue] - 1];
            }
        }else{
            [SVProgressHUD showErrorWithStatus:model.info];
        }
    } failure:^(__kindof LCBaseRequest *request, NSError *error) {
        [SVProgressHUD dismiss];
        [SVProgressHUD showErrorWithStatus:error.domain];
    }];
}

#pragma mark - ---- 私有方法 ----
- (void)loadData {
    LNetWorkAPI *api = [[LNetWorkAPI alloc] initWithUrl:@"/Api/GoodsApi/goodsDetail" parameters:@{@"goods_id":self.goodsId}];
    
    [SVProgressHUD show];
    [api startWithBlockSuccess:^(__kindof LCBaseRequest *request) {
        [SVProgressHUD dismiss];
        DZGoodsDetailNetModel *model = [DZGoodsDetailNetModel objectWithKeyValues:request.responseJSONObject];
        if (model.isSuccess) {
            self.model = model.data;
            [self setupViews];
        } else {
            [SVProgressHUD showInfoWithStatus:model.info];
            
        }
    } failure:^(__kindof LCBaseRequest *request, NSError *error) {
        [SVProgressHUD dismiss];
        [SVProgressHUD showErrorWithStatus:error.domain];
    }];
}

- (void)setupViews {
    [self setupBanner];
    [self setupInfo];
    [self setupShopComment];
    [self setupShopInfo];
    [self setupImages];
    [self setupActivity];
}

- (void)setupBanner {
    NSMutableArray *urls = [NSMutableArray array];
    for (DZGoodsGalleryItemModel *item in self.model.goods_gallery) {
        [urls addObject:FULL_URL(item.image_path)];
    }
    self.bannerView.imageURLStringsGroup = urls;
}

- (void)setupInfo {
    DZGoodsInfoModel *info = self.model.goods_info;
    self.titleView.titleLabel.text = info.goods_name;
    self.titleView.collectNum.text = info.collect_num;
    if ([info.is_favorite integerValue]) {
        self.titleView.heartImageView.image = [UIImage imageNamed:@"gooddetail_icon_liked"];
    }else{
        self.titleView.heartImageView.image = [UIImage imageNamed:@"gooddetail_icon_unlike"];
    }
    
    self.priceView.retailNumLabel.text = [NSString stringWithFormat:@"%@到%@件",info.retail_amount,info.basic_amount];
    self.priceView.packNumLabel.text = [NSString stringWithFormat:@"%@件以上",info.basic_amount];
    
    self.priceView.shopPriceLabel.text = [NSString stringWithFormat:@"￥%@",info.shop_price];
    self.priceView.packPriceLabel.text = [NSString stringWithFormat:@"￥%@",info.pack_price];
    self.priceView.timeLabel.text = info.add_time;
    self.priceView.viewNumLabel.text = [NSString stringWithFormat:@"%@次浏览",info.click_count];
    self.priceView.soldNumLabel.text = [NSString stringWithFormat:@"已售出%@件",info.sale_num];
}

- (void)setupShopComment {
    DZGoodsShopCommentModel *model = self.model.shop_comment;
    
    self.remarkView.rateLabel.text = [NSString stringWithFormat:@"%@%%",model.ravorableRate];
    self.remarkView.commentNumLabel.text = [NSString stringWithFormat:@"%@条评论",model.commentCount];
    //如果没有评论，隐藏下面的部分，有则显示。
    if(model.neoComment.count > 0 && ![model.commentCount isEqualToString:@"0"]) {
        DZGoodsShopCommentItemModel *comment = model.neoComment.firstObject;
        [self.remarkView.avatarImageView sd_setImageWithURL:[NSURL URLWithString:FULL_URL(comment.head_pic)] placeholderImage:[UIImage imageNamed:@"avatar_grey"]];
        self.remarkView.userNameLabel.text = comment.user_name;
        self.remarkView.contentLabel.text = comment.content;
        self.remarkView.timeLabel.text = comment.add_time;
        
        [self.remarkView mas_updateConstraints:^(MASConstraintMaker *make) {
            make.height.mas_equalTo(117);
        }];
        
    } else {
        //隐藏掉,其实就是改变View高度？
        [self.remarkView mas_updateConstraints:^(MASConstraintMaker *make) {
            make.height.mas_equalTo(30);
        }];
    }
}

- (void)setupShopInfo {
    DZGoodsShopInfoModel *shop = self.model.shop_info;
    
    [self.shopView.avatarImageView sd_setImageWithURL:[NSURL URLWithString:FULL_URL(shop.shop_logo)] placeholderImage:[UIImage imageNamed:@"avatar_grey"]];
    self.shopView.nameLabel.text = shop.shop_name;
    self.shopView.addressLabel.text = shop.shop_addr;
    self.shopView.openTimeLabel.text = shop.open_time;
    self.shopView.soldNumLabel.text = shop.month_sale_count;
    self.shopView.updateNumLabel.text = shop.month_goods_count;
    self.shopView.suppRateLabel.text = [NSString stringWithFormat:@"%@%%",shop.supplement];
    
}

- (void)setupImages {
    NSArray *images = self.model.goods_desc;
    [self.imageArray removeAllObjects];
    [self.heightArray removeAllObjects];
    for (DZGoodsGalleryItemModel *item in images) {
        [self.imageArray addObject:item];
        [self.heightArray addObject:@(10)];
    }
    if(images.count == 0) {
        [self.tableView mas_updateConstraints:^(MASConstraintMaker *make) {
            make.height.mas_equalTo(0);
        }];
    }
    
    [self.tableView reloadData];
}

- (void)setupActivity {
    DZGoodsActivityModel *model = self.model.goods_info.activity;
    if (model) {
        if(model.start_time >0 && model.end_time >0) {
            if(model.start_time < model.now_time && model.now_time < model.end_time) {
                //进行中  显示出限时抢购view
                
                [self.timeLimitView mas_updateConstraints:^(MASConstraintMaker *make) {
                    make.height.mas_equalTo(40);
                }];
                
                self.timeLimitView.activityPriceLabel.text = [NSString stringWithFormat:@"￥%@",model.activity_price];
                
                //self.timeLimitView.shopPriceLabel.text = [NSString stringWithFormat:@"￥%@",model.shop_price];
                NSString *oldPrice = [NSString stringWithFormat:@"￥%@",model.shop_price];
                NSUInteger length = [oldPrice length];
                
                NSMutableAttributedString *attri = [[NSMutableAttributedString alloc] initWithString:oldPrice];
                [attri addAttribute:NSBaselineOffsetAttributeName value:@0 range:NSMakeRange(0, length)];
                [attri addAttribute:NSStrikethroughStyleAttributeName value:@(NSUnderlinePatternSolid | NSUnderlineStyleSingle) range:NSMakeRange(0, length)];
                [attri addAttribute:NSStrikethroughColorAttributeName value:self.timeLimitView.shopPriceLabel.textColor range:NSMakeRange(0, length)];
                [self.timeLimitView.shopPriceLabel setAttributedText:attri];
                
                NSTimeInterval timeLeft = model.end_time - model.now_time;
                self.timeLeft = timeLeft;
                [self setupTimeLeft:timeLeft];
                @weakify(self);
                [[[RACSignal interval:1 onScheduler:[RACScheduler mainThreadScheduler]] takeUntil:self.rac_willDeallocSignal ] subscribeNext:^(id x) {
                    @strongify(self);
                    self.timeLeft--;
                    [self setupTimeLeft:self.timeLeft];
                }];
            }
        }
        
    }
}

- (void)setupTimeLeft:(NSTimeInterval)timeLeft {
    if(timeLeft <=0 ){
        return;
    }
    
    NSInteger hour = ((int)timeLeft/3600)%100;
    NSInteger min = ((int)timeLeft%3600)/60;
    NSInteger sec = ((int)timeLeft%60);
    
    self.timeLimitView.hourLabel.text = [NSString stringWithFormat:@"%02ld",(long)hour];
    self.timeLimitView.minLabel.text = [NSString stringWithFormat:@"%02ld",(long)min];
    self.timeLimitView.secLabel.text = [NSString stringWithFormat:@"%02ld",(long)sec];
}

- (CGFloat)pullTop {
    CGFloat top = 0;
    top += SCREEN_WIDTH * 785 / 750;
    top += 45;
    top += 91 + 0.5;
    DZGoodsShopCommentModel *model = self.model.shop_comment;
    if(model.neoComment.count > 0 && ![model.commentCount isEqualToString:@"0"]) {
        top += 117;
    } else {
        top += 30;
    }
    top += 8;
    top += 94 + 8;
    
    return top;
}

- (void)popMenu:(UIButton *)button {
    FTPopOverMenuConfiguration *configuration = [FTPopOverMenuConfiguration defaultConfiguration];
    //configuration.textColor = HEXCOLOR(0xfffff);
    //configuration.menuIconMargin = 12;
   // configuration.borderColor = HEXCOLOR(0x333333);
   // configuration.menuRowHeight = 35;
    configuration.tintColor = [UIColor colorWithWhite:0 alpha:0.8];
    configuration.textAlignment = NSTextAlignmentCenter;
    
    
    [FTPopOverMenu showForSender:button withMenuArray:@[@"消息",@"首页",@"分享商品"] doneBlock:^(NSInteger selectedIndex) {
        switch (selectedIndex) {
            case 0:
            {
                if(![self checkLogin]) {
                    return;
                }
                DZMessageVC *vc = [DZMessageVC new];
                [self.navigationController pushViewController:vc animated:YES];
            }
                break;
                
            case 1:

                [self showTabWithIndex:0 needSwitch:NO];
                break;
            case 2:
                [self share];
                break;
                
            default:
                break;
        }
    } dismissBlock:^{
        
    }];
    
}

- (void)chat {
    if(![self checkLogin]) {
        return;
    }
    
    if(!self.model) {
        return;
    }
    
    if ([DPMobileApplication sharedInstance].isShowing) {
        return;
    }
    
    //[DPMobileApplication sharedInstance].isShowing = YES;
    
    if ([DPMobileApplication sharedInstance].isLogined) {

        if ([EMClient sharedClient].currentUsername) {
            LNetWorkAPI *api = [[LNetWorkAPI alloc] initWithUrl:@"/Api/ShopApi/getShopEmchat" parameters:@{@"shop_id":self.model.shop_info.shop_id}];
            //self.model.shop_info.shop_id
            [SVProgressHUD show];
            [api startWithBlockSuccess:^(__kindof LCBaseRequest *request) {
                [SVProgressHUD dismiss];
                DZEMChatUserNetModel *model = [DZEMChatUserNetModel objectWithKeyValues:request.responseJSONObject];
                if (model.isSuccess) {
                    DZEMChatUserModel *em = model.data;
                    ChatViewController *chatController = [[ChatViewController alloc] initWithConversationChatter:em.emchat_username conversationType:0];
//                    [[ChatViewController alloc] initWithConversationChatter:@"" conversationType:EMConversationTypeChatRoom];
                    chatController.real_name = em.nickname;
                    chatController.imageurl = [NSString stringWithFormat:@"%@%@",DEFAULT_HTTP_IMG,em.head_pic];
                    chatController.hidesBottomBarWhenPushed = YES;
                    // 传递产品信息
                    chatController.isFromProductDetail = YES;
                    chatController.commodityID = self.model.goods_info.goods_id;// self.model.goods.goods_id;
                    chatController.commodityName = self.model.goods_info.goods_name;
                    chatController.commodityPrice = self.model.goods_info.shop_price;
                    //NSString *urlString = [SPCommonUtils getThumbnailWithHost:FLEXIBLE_THUMBNAIL goodsID:Str(self.model.goods.goods_id)];
                    NSString *urlString = FULL_URL(self.model.goods_info.goods_img);
                    chatController.commodityImage = urlString;
                    [self.navigationController pushViewController:chatController animated:YES];
                } else {
                    [SVProgressHUD showInfoWithStatus:model.info];
                    
                }
            } failure:^(__kindof LCBaseRequest *request, NSError *error) {
                [SVProgressHUD dismiss];
                [SVProgressHUD showErrorWithStatus:error.domain];
            }];
            
//            SupportEmchatAPI *api = [[SupportEmchatAPI alloc] init];
//            [api startWithBlockSuccess:^(__kindof LCBaseRequest *request) {
//                SupportEmchatModel *model = [SupportEmchatModel objectWithKeyValues:request.responseJSONObject];
//                if (model.status == 1) {
//
//                    Result *result = [Result objectWithKeyValues:model.result];
//                    ChatViewController *chatController = [[ChatViewController alloc] initWithConversationChatter:result.emchat_username conversationType:0];
//                    chatController.real_name = result.nickname;
//                    chatController.imageurl = [NSString stringWithFormat:@"%@%@",DEFAULT_HTTP_HOST,result.head_pic];
//                    chatController.hidesBottomBarWhenPushed = YES;
//                    // 传递产品信息
//                    chatController.isFromProductDetail = YES;
//                    chatController.commodityID = self.model.goods.goods_id;
//                    chatController.commodityName = self.model.goods.goods_name;
//                    chatController.commodityPrice = self.model.goods.shop_price;
//                    //NSString *urlString = [SPCommonUtils getThumbnailWithHost:FLEXIBLE_THUMBNAIL goodsID:Str(self.model.goods.goods_id)];
//                    NSString *urlString = self.model.goods.original_img;
//                    chatController.commodityImage = urlString;
//                    [self.navigationController pushViewController:chatController animated:YES];
//
//                }
//            } failure:^(__kindof LCBaseRequest *request, NSError *error) {
//            }];
        }else {
//            GGUserModel *user = [SPMobileApplication sharedInstance].loginUser;
//            // 登录环信
//            [[EMClient sharedClient] loginWithUsername:user.emchat_username
//                                              password:user.emchat_password
//                                            completion:^(NSString *aUsername, EMError *aError) {
//                                                if (!aError) {
//                                                    SupportEmchatAPI *api = [[SupportEmchatAPI alloc] init];
//                                                    [api startWithBlockSuccess:^(__kindof LCBaseRequest *request) {
//                                                        SupportEmchatModel *model = [SupportEmchatModel objectWithKeyValues:request.responseJSONObject];
//                                                        if (model.status == 1) {
//                                                            Result *result = [Result objectWithKeyValues: model.result];
//                                                            ChatViewController *chatController = [[ChatViewController alloc] initWithConversationChatter:result.emchat_username conversationType:0];
//                                                            chatController.real_name = result.nickname;
//                                                            chatController.imageurl = [NSString stringWithFormat:@"%@%@",DEFAULT_HTTP_HOST,result.head_pic];
//                                                            [self.navigationController pushViewController:chatController animated:YES];
//                                                            
//                                                        }
//                                                    } failure:^(__kindof LCBaseRequest *request, NSError *error) {
//                                                    }];
//                                                }else {
//                                                    [self showTextOnly:@"客服正忙，请稍后尝试"];
//                                                }
//                                            }];
        }
    }else {
        //[[NSNotificationCenter defaultCenter] postNotificationName:NotificationTokenExpire object:nil];
    }
    
}

- (void)share {
    if (!self.model) {
        return;
    }
    //1、创建分享参数
    NSArray* imageArray = @[FULL_URL(self.model.goods_info.goods_img)];
    //（注意：图片必须要在Xcode左边目录里面，名称必须要传正确，如果要分享网络图片，可以这样传iamge参数 images:@[@"http://mob.com/Assets/images/logo.png?v=20150320"]）
    if (imageArray) {
        
        NSMutableDictionary *shareParams = [NSMutableDictionary dictionary];
        [shareParams SSDKSetupShareParamsByText:@"分享内容"
                                         images:imageArray
                                            url:[NSURL URLWithString:@"http://www.baidu.com"]
                                          title:self.model.goods_info.goods_name
                                           type:SSDKContentTypeAuto];
        //有的平台要客户端分享需要加此方法，例如微博
        //[shareParams SSDKEnableUseClientShare];
        //设置简介版UI 需要  #import <ShareSDKUI/SSUIShareActionSheetStyle.h>
        [SSUIShareActionSheetStyle setShareActionSheetStyle:ShareActionSheetStyleSimple];
        //2、分享（可以弹出我们的分享菜单和编辑界面）
        [ShareSDK showShareActionSheet:self.moreButton //要显示菜单的视图, iPad版中此参数作为弹出菜单的参照视图，只有传这个才可以弹出我们的分享菜单，可以传分享的按钮对象或者自己创建小的view 对象，iPhone可以传nil不会影响
                                 items:nil
                           shareParams:shareParams
                   onShareStateChanged:^(SSDKResponseState state, SSDKPlatformType platformType, NSDictionary *userData, SSDKContentEntity *contentEntity, NSError *error, BOOL end) {
                       
                       switch (state) {
                           case SSDKResponseStateSuccess:
                           {
                               UIAlertView *alertView = [[UIAlertView alloc] initWithTitle:@"分享成功"
                                                                                   message:nil
                                                                                  delegate:nil
                                                                         cancelButtonTitle:@"确定"
                                                                         otherButtonTitles:nil];
                               [alertView show];
                               break;
                           }
                           case SSDKResponseStateFail:
                           {
                               UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"分享失败"
                                                                               message:[NSString stringWithFormat:@"%@",error]
                                                                              delegate:nil
                                                                     cancelButtonTitle:@"OK"
                                                                     otherButtonTitles:nil, nil];
                               [alert show];
                               break;
                           }
                           default:
                               break;
                       }
                   }
         ];}
}
#pragma mark - ---- 布局代码 ----
- (void) setSubViewsFrame{

}

- (void) setSubViewsLayout{
    [self.scrollView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.left.right.mas_offset(0);
        make.bottom.mas_offset(-50);
    }];
    
    [self.bottomView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(self.scrollView.mas_bottom);
        make.left.bottom.right.mas_offset(0);
    }];
    
    [self.navView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.left.right.mas_offset(0);
        make.height.mas_equalTo(64);
    }];
    
    [self.backButton mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.mas_offset(26);
        make.left.mas_offset(12);
    }];
    
    [self.moreButton mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.mas_offset(26);
        make.right.mas_offset(-12);
    }];
    
    [self.cartButton mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.mas_offset(26);
        make.right.equalTo(self.moreButton.mas_left).mas_offset(-23);
    }];
    
    [self.bannerView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.left.right.mas_offset(0);
        make.height.mas_equalTo(SCREEN_WIDTH * 785 / 750);
        make.width.equalTo(self.scrollView.mas_width);
    }];
    
    [self.timeLimitView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(self.bannerView.mas_bottom);
        make.left.right.mas_offset(0);
        make.height.mas_equalTo(0);
    }];
    
    [self.titleView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(self.timeLimitView.mas_bottom);
        make.left.right.mas_offset(0);
        make.height.mas_equalTo(45);

    }];
    
    [self.priceView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(self.titleView.mas_bottom).mas_offset(0.5);
        make.left.right.mas_offset(0);
        make.height.mas_equalTo(91);
    }];
    
    [self.remarkView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(self.priceView.mas_bottom).mas_offset(8);
        make.left.right.mas_offset(0);
        make.height.mas_equalTo(117);
    }];
    
    [self.shopView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(self.remarkView.mas_bottom).mas_offset(8);
        make.left.right.mas_offset(0);
        make.height.mas_equalTo(94);
    }];
    
    [self.pullView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(self.shopView.mas_bottom);
        make.left.right.mas_offset(0);
        make.height.mas_equalTo(46);
    }];
    
    [self.tableView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(self.pullView.mas_bottom);
        make.left.right.mas_offset(0);
        make.height.mas_equalTo(100);
        make.bottom.mas_offset(0);
    }];
}

#pragma mark - --- getters 和 setters ----
- (UIScrollView *)scrollView {
    if(!_scrollView) {
        _scrollView = [[UIScrollView alloc] init];
        _scrollView.delegate = self;
    }
    return _scrollView;
}

- (SDCycleScrollView *)bannerView {
    
    if (!_bannerView) {
        // 网络加载 --- 创建带标题的图片轮播器
        _bannerView = [[SDCycleScrollView alloc] init];
        //    cycleScrollView.placeholderImage = placeholderImage;
        _bannerView.delegate = self;
        _bannerView.backgroundColor = [UIColor whiteColor];
        _bannerView.bannerImageViewContentMode = UIViewContentModeScaleAspectFill;
        _bannerView.pageControlAliment = SDCycleScrollViewPageContolAlimentCenter;
        _bannerView.pageControlStyle = SDCycleScrollViewPageContolStyleClassic;
        _bannerView.currentPageDotColor = BannerCurrentDotColor; // 自定义分页控件小圆标颜色
        _bannerView.pageDotColor = BannerOtherDotColor;
        _bannerView.placeholderImage = [UIImage imageNamed:@"placeholder"];
//        NSMutableArray *imageArray =[[NSMutableArray alloc] init];
//        //        for (BannerlistModel *bannerModel in [Utils getUserModel].bannerList) {
//        //            NSString *imageStringUrl=[NSString stringWithFormat:@"%@%@",base_image_url,bannerModel.img];
//        //            [imageArray addObject:imageStringUrl];
//        //        }
//        [imageArray addObject:@"http://dingzhi.host3.liuniukeji.com/Uploads/goods_desc/20170906/1504691717483422.png"];
//        [imageArray addObject:@"http://gobuy.host3.liuniukeji.com/Public/upload/goods/2017/07-12/5965cc3e57fa2.jpg"];
//        _bannerView.imageURLStringsGroup = [imageArray copy];
        _bannerView.layer.masksToBounds = YES;
        _bannerView.autoScroll = NO;
        
    }
    return _bannerView;
}

- (DZGoodsDetailTitleView *)titleView {
    if(!_titleView) {
        _titleView = [DZGoodsDetailTitleView viewFormNib];
        [_titleView.favoriteView addGestureRecognizer:[[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(favoriteViewClick)]];
    }
    return _titleView;
}

- (DZGoodsDetailPriceView *)priceView {
    if(!_priceView) {
        _priceView = [DZGoodsDetailPriceView viewFormNib];
    }
    return _priceView;
}

- (DZGoodsDetailRemarkView *)remarkView {
    if (!_remarkView) {
        _remarkView = [DZGoodsDetailRemarkView viewFormNib];
        @weakify(self);
        [[_remarkView.commentButton rac_signalForControlEvents:UIControlEventTouchUpInside] subscribeNext:^(id x) {
            @strongify(self);
            DZShopCommentVC *vc = [[DZShopCommentVC alloc] init];
            vc.shopId = self.model.shop_info.shop_id;
            [self.navigationController pushViewController:vc animated:YES];
        }];
    }
    return _remarkView;
}

- (DZGoodsDetailShopView *)shopView {
    if(!_shopView) {
        _shopView = [DZGoodsDetailShopView viewFormNib];
        
        @weakify(self);
        [[_shopView.shopButton rac_signalForControlEvents:UIControlEventTouchUpInside] subscribeNext:^(id x) {
            @strongify(self);
            if (self.model) {
                DZShopDetailVC *vc = [[DZShopDetailVC alloc] init];
                vc.shopId = self.model.shop_info.shop_id;
                [self.navigationController pushViewController:vc animated:YES];
            }

        }];
    }
    return _shopView;
}

- (DZGoodsDetailPullView *)pullView {
    if(!_pullView) {
        _pullView = [DZGoodsDetailPullView viewFormNib];
    }
    return _pullView;
}

- (DZGoodsDetailBottomView *)bottomView {
    if(!_bottomView) {
        _bottomView = [DZGoodsDetailBottomView viewFormNib];
        
        @weakify(self);
        
        [[_bottomView.catButton rac_signalForControlEvents:UIControlEventTouchUpInside] subscribeNext:^(id x) {
            @strongify(self);
            if (!self.model) {
                return;
            }
            DZShopCateVC *vc = [[DZShopCateVC alloc] init];
            vc.shopId = self.model.shop_info.shop_id;
            [self.navigationController pushViewController:vc animated:YES];
        }];
        
        [[_bottomView.chatButton rac_signalForControlEvents:UIControlEventTouchUpInside] subscribeNext:^(id x) {
            [self chat];
        }];
        
        [[_bottomView.shopButton rac_signalForControlEvents:UIControlEventTouchUpInside] subscribeNext:^(id x) {
            @strongify(self);
            if (self.model) {
                DZShopDetailVC *vc = [[DZShopDetailVC alloc] init];
                vc.shopId = self.model.shop_info.shop_id;
                [self.navigationController pushViewController:vc animated:YES];
            }
        }];
        
        
        [[_bottomView.addButton rac_signalForControlEvents:UIControlEventTouchUpInside] subscribeNext:^(id x) {
            @strongify(self);
            DZAddCartVC *vc = [[DZAddCartVC alloc] init];
            vc.goodsId = self.goodsId;
            vc.model = self.model;
            [self.navigationController pushViewController:vc animated:YES];
        }];
        
        
    }
    return _bottomView;
}

- (UIButton *)backButton {
    if(!_backButton) {
        _backButton = [[UIButton alloc] init];
        [_backButton setImage:[UIImage imageNamed:@"gooddetail_icon_back"] forState:UIControlStateNormal];
        @weakify(self);
        [[_backButton rac_signalForControlEvents:UIControlEventTouchUpInside] subscribeNext:^(id x) {
            @strongify(self);
            [self.navigationController popViewControllerAnimated:YES];
        }];
    }
    return _backButton;
}

- (UIButton *)cartButton {
    if(!_cartButton) {
        _cartButton = [[UIButton alloc] init];
        [_cartButton setImage:[UIImage imageNamed:@"gooddetail_icon_cart"] forState:UIControlStateNormal];
        //点击后跳转进货车
        @weakify(self);
        [[_cartButton rac_signalForControlEvents:UIControlEventTouchUpInside] subscribeNext:^(id x) {
            @strongify(self);
            if(![self checkLogin]) {
                return;
            }
            [self showTabWithIndex:3 needSwitch:NO];
        }];
    }
    return _cartButton;
}

- (UIButton *)moreButton {
    if(!_moreButton) {
        _moreButton = [[UIButton alloc] init];
        [_moreButton setImage:[UIImage imageNamed:@"gooddetail_icon_other"] forState:UIControlStateNormal];
        @weakify(self);
        //点击弹出菜单
        [[_moreButton rac_signalForControlEvents:UIControlEventTouchUpInside] subscribeNext:^(id x) {
            @strongify(self);
            [self popMenu:_moreButton];
        }];
    }
    return _moreButton;
}

- (DZGoodsDetailNavView *)navView {
    if (!_navView) {
        _navView = [DZGoodsDetailNavView viewFormNib];
        _navView.alpha = 0;
    }
    return _navView;
}

- (UITableView *)tableView {
    if(!_tableView) {
        _tableView = [[UITableView alloc] init];
        _tableView.delegate = self;
        _tableView.dataSource = self;
        [_tableView registerNib:[UINib nibWithNibName:kGoodsDetailImageCell bundle:[NSBundle mainBundle]] forCellReuseIdentifier:kGoodsDetailImageCell];
        _tableView.scrollEnabled = NO;
        _tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    }
    return _tableView;
}
- (NSMutableArray *)imageArray {
    if(!_imageArray) {
        _imageArray = [NSMutableArray array];
    }
    return _imageArray;
}

- (NSMutableArray *)heightArray {
    if(!_heightArray) {
        _heightArray = [NSMutableArray array];
    }
    return _heightArray;
}

- (DZGoodsDetailTimeLimitView *)timeLimitView {
    if (!_timeLimitView) {
        _timeLimitView = [DZGoodsDetailTimeLimitView viewFormNib];
        _timeLimitView.layer.masksToBounds = YES;
    }
    return _timeLimitView;
}

@end
